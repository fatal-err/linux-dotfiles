#!/bin/bash

source ./net


function run_tor {
  local _nsn=$1
  local _port=$2
  local dir=$3
  local cport=$(($_port+1))
  local datadir="$dir/data"

  if [ -z "$_nsn" ]; then
    _nsn="$nsn"
  fi

  mkdir -p $datadir
  chmod 700 $datadir -R
  chown tor:tor $datadir -R

  local pid_file="${dir}/pid-nsn:${_nsn}-port:${_port}-cport:${cport}"

  # `"--UseEntryGuards 0 "`
  # `"--AllowSingleHopCircuits 1 "`
  # `"--UseEntryGuardsAsDirGuards 0 "`
  run_in_skip_vpn_ns yes $_nsn tor "tor --SocksPort 0.0.0.0:${port} "`
    `"--ControlPort ${cport} "`
    `"--NewCircuitPeriod 15 "`
    `"--MaxCircuitDirtiness 15 "`
    `"--CircuitBuildTimeout 5 "`
    `"--ExitRelay 0 "`
    `"--RefuseUnknownExits 0 "`
    `"--ClientOnly 1 "`
    `"--DataDirectory ${datadir} "`
    `"--PidFile ${pid_file} "`
    `"--Log \"warn syslog\" "`
    `"--RunAsDaemon 1 "`
    `"| logger -t 'tor' 2>&1"
  echo "Running tor instance:"
  echo "    Port               : $_port"
  echo "    Control port       : $cport"
  echo "    Network namespace  : $_nsn"
  echo "    Directory          : $dir"
  echo "    Data directory     : $datadir"
  echo "    PID file           : $pid_file"
  echo
}

function run_tor_n {
  local n=$1
  local rootdir=$2
  local _nsn=$3
  local port

  if [ -z "$n" ]; then
    n=3;
  fi

  if [ -z "$_nsn" ]; then
      _nsn="$nsn"
  fi


  for (( i=1; i<=$n; i++ )); do
    port=$((9250 + (2 * i)))
    run_tor $_nsn $port $rootdir
  done
}


function run_unified_haproxy {
  local _nsn=$1
  local _user=$2
  local port=$3
  local dir=$4
  local server_ports=$5

  local config_file="$dir/haproxy.cfg"
  local pid_file="$dir/pid-haproxy-nsn:$_nsn"
  local config="
global
  maxconn 1024 
  daemon
  pidfile ${pid_file}

defaults
  mode http
  maxconn 1024
  option  httplog
  option  dontlognull
  retries 3
  timeout connect 5s
  timeout client 60s
  timeout server 60s


listen stats
  bind *:4444
  mode            http
  maxconn 10
  timeout client      100s
  timeout server      100s
  timeout connect     100s
  timeout queue   100s
  stats enable
  stats hide-version
  stats refresh 30s
  stats show-node
  stats uri /haproxy?stats


frontend rotating_proxies
  bind *:${port}
  default_backend tor
  option http_proxy

backend tor
  option http_proxy
  balance leastconn # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#balance

  # server <%= b[:name] %><%= b[:port] %> <%= b[:addr] %>:<%= b[:port] %>
"

  # generating the server options
  local name="tor"
  local addr="127.0.0.1"
  for listen_port in $server_ports; do
    config="${config}\n  server ${name}${port} ${addr}:$port"
  done

  echo "$config" > $config_file
  run_in_skip_vpn_ns "yes" $_nsn $_user "haproxy -f \"${config_file}\" | logger 2>&1"
}
