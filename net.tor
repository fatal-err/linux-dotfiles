#!/bin/bash

source ./net


function run_tor {
  local _nsn=$1
  local _port=$2
  local dir=$3
  local cport=$(($_port+1))
  local datadir="$dir/data"

  if [ -z "$_nsn" ]; then
    _nsn="$nsn"
  fi

  chmod 700 $datadir -R
  chown tor:tor $datadir -R

  local pid_file="${dir}/pid-nsn:${_nsn}-port:${_port}-cport:${cport}"

  run_in_skip_vpn_ns yes $_nsn tor "--SocksPort 0.0.0.0:${port}"\
    "--ControlPort ${cport}"\
    "--NewCircuitPeriod 15"\
    "--MaxCircuitDirtiness 15"\
    "--UseEntryGuards 0"\
    "--UseEntryGuardsAsDirGuards 0"\
    "--CircuitBuildTimeout 5"\
    "--ExitRelay 0"\
    "--RefuseUnknownExits 0"\
    "--ClientOnly 1"\
    "--AllowSingleHopCircuits 1"\
    "--DataDirectory ${datadir}"\
    "--PidFile ${pid_file}"\
    "--Log \"warn syslog\""\
    "--RunAsDaemon 1"\
    "| logger -t 'tor' 2>&1"
  echo "Running tor instance:"
  echo "\tport               : $_port"
  echo "\tcport              : $cport"
  echo "\tNetwork namespace  : $_nsn"
  echo "\tDirectory          : $dir"
  echo "\tData directory     : $datadir"
  echo "\tPID file           : $pid_file"
  echo
}

function run_tor_n {
  local n=$1
  local rootdir=$2
  local port

  if [ -z "$n" ]; then
    n=3;
  fi
  
  add_skip_vpn_ns $device $nsn $mvlan_name

  for (( i=1; i<=$n; i++ )); do
    port=$((9250 + (2 * i)))
    run_tor $nsn $port $rootdir
  done
}


function run_unified_haproxy {

  local config=$()
}
